{"version":3,"sources":["js/refs.js","js/apiService.js","js/app.js","index.js"],"names":["refs","cityCard","document","querySelector","searchForm","inputRef","weather","city","temp","icon","humidity","wind","description","API_KEY","BASE_URL","WeatherApi","constructor","searchQuery","fetchWeather","request","response","fetch","newResponse","json","query","newQuery","weatherApi","onSubmit","event","preventDefault","currentTarget","elements","value","alert","showCard","data","cod","hideCard","textContent","name","showInCelsius","Math","round","main","src","alt","speed","error","console","classList","remove","add","addEventListener"],"mappings":";;;AAYeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAZf,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,cACjCC,WAAYF,SAASC,cAAc,gBACnCE,SAAUH,SAASC,cAAc,eACjCG,QAASJ,SAASC,cAAc,YAChCI,KAAML,SAASC,cAAc,SAC7BK,KAAMN,SAASC,cAAc,SAC7BM,KAAMP,SAASC,cAAc,SAC7BO,SAAUR,SAASC,cAAc,aACjCQ,KAAMT,SAASC,cAAc,SAC7BS,YAAaV,SAASC,cAAc,iBAEvBH,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACTiB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHhC,MAAMa,EAAU,mCACVC,EAAW,kDAEF,MAAMC,EACnBC,cACOC,KAAAA,YAAc,GAGfC,qBACEC,MAAAA,QAAgB,KAAKF,qBAAqBJ,IAC1CO,QAAiBC,MAAMP,EAAWK,GAEjCG,aADmBF,EAASG,OAIjCC,YACK,OAAA,KAAKP,YAGVO,UAAMC,GACHR,KAAAA,YAAcQ,GAjBS,QAAA,QAAA;;ACuD/B,aAzDD,IAAA,EAAA,EAAA,QAAA,cAKA,EAAA,EAAA,QAAA,oBAoDC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxDD,MAAM,KAAElB,EAAF,KAAQC,EAAR,KAAcC,EAAd,YAAoBG,EAApB,SAAiCP,EAAjC,QAA2CC,EAA3C,SAAoDI,EAApD,KAA8DC,EAA9D,WAAoEP,EAApE,SAAgFH,GACpFD,EADF,QAKM0B,EAAa,IAAIX,EAAJ,QAMnB,SAASY,EAASC,GAKZF,GAJJE,EAAMC,iBAENH,EAAWF,MAAQI,EAAME,cAAcC,SAASP,MAAMQ,MAE7B,KAArBN,EAAWF,MACNS,OAAAA,MAAO,sCAGhBC,IACAhB,IACAb,EAAS2B,MAAQ,GAInB,eAAed,IACT,IACIiB,MAAAA,QAAaT,EAAWR,eAE1BiB,GAAa,MAAbA,EAAKC,IAEAH,OADPI,IACOJ,MAAM,2CAGf1B,EAAK+B,0BAA4BH,EAAKI,OAChCC,MAAAA,EAAgBC,KAAKC,MAAMP,EAAKQ,KAAKnC,KAAO,QAClDA,EAAK8B,eAAiBE,MACtB/B,EAAKmC,yCAA2CT,EAAK7B,QAAQ,GAAGG,WAChEA,EAAKoC,IAAMV,EAAK7B,QAAQ,GAAGM,YAC3BA,EAAY0B,YAAcH,EAAK7B,QAAQ,GAAGM,YAC1CF,EAAS4B,yBAA2BH,EAAKQ,KAAKjC,YAC9CC,EAAK2B,2BAA6BH,EAAKxB,KAAKmC,aAC5C,MAAOC,GACPC,QAAQD,MAAMA,IAKlB,SAASb,IACPjC,EAASgD,UAAUC,OAAO,mBAI5B,SAASb,IACPpC,EAASgD,UAAUE,IAAI,mBA/CzB/C,EAAWgD,iBAAiB,SAAUzB;;ACPtC,aAHA,QAAA,oBACA,QAAA,YACA,QAAA,mBACA,QAAA","file":"src.7742328e.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  cityCard: document.querySelector('.city-card'),\n  searchForm: document.querySelector('.search-form'),\n  inputRef: document.querySelector('.search-bar'),\n  weather: document.querySelector('.weather'),\n  city: document.querySelector('.city'),\n  temp: document.querySelector('.temp'),\n  icon: document.querySelector('.icon'),\n  humidity: document.querySelector('.humidity'),\n  wind: document.querySelector('.wind'),\n  description: document.querySelector('.description'),\n};\nexport default refs;\n","const API_KEY = '7c511c1fd9bf88bf9a9d5d01c37e0441';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport default class WeatherApi {\n  constructor() {\n    this.searchQuery = '';\n  }\n\n  async fetchWeather() {\n    const request = `?q=${this.searchQuery}&appid=${API_KEY}`;\n    const response = await fetch(BASE_URL + request);\n    const newResponse = await response.json();\n    return newResponse;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","// import refs:\nimport refs from './refs.js';\nconst { city, temp, icon, description, inputRef, weather, humidity, wind, searchForm, cityCard } =\n  refs;\n\n// import api-service and create instance:\nimport WeatherApi from './apiService.js';\nconst weatherApi = new WeatherApi();\n\n// listening to query:\nsearchForm.addEventListener('submit', onSubmit);\n\n// callback to handle query:\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  weatherApi.query = event.currentTarget.elements.query.value;\n\n  if (weatherApi.query === '') {\n    return alert(`You didn't type a valid city!ü§¶‚Äç‚ôÇÔ∏è`);\n  }\n\n  showCard();\n  fetchWeather();\n  inputRef.value = '';\n}\n\n// async function to fetch weather:\nasync function fetchWeather() {\n  try {\n    const data = await weatherApi.fetchWeather();\n\n    if (data.cod !== 200) {\n      hideCard();\n      return alert('üò¢ Sorry, no weather info for that city');\n    }\n\n    city.textContent = `Weather in ${data.name}`;\n    const showInCelsius = Math.round(data.main.temp - 273.15);\n    temp.textContent = `${showInCelsius}¬∞C`;\n    icon.src = `https://openweathermap.org/img/wn/${data.weather[0].icon}.png`;\n    icon.alt = data.weather[0].description;\n    description.textContent = data.weather[0].description;\n    humidity.textContent = `Humidity: ${data.main.humidity}%`;\n    wind.textContent = `Wind Speed: ${data.wind.speed} km/h`;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// removing visually hidden class on City card after data fetch:\nfunction showCard() {\n  cityCard.classList.remove('visually-hidden');\n}\n\n// adding visually hidden class to City card if server responses in error:\nfunction hideCard() {\n  cityCard.classList.add('visually-hidden');\n}\n","import './sass/main.scss';\nimport './js/app';\nimport './js/apiService';\nimport './js/refs';\n"]}